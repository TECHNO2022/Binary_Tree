/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        List<List<Integer>> ans=new ArrayList<>();
        if(root==null)
            return ans;
        boolean flag=true;
        
        while(!q.isEmpty())
        {
            List<Integer> res=new ArrayList<>();
            int n=q.size();
            for(int i=1;i<=n;i++)
            {
                TreeNode temp=q.poll();
                    if(flag==true)

                res.add(temp.val);
                else
                {
                    //to add element at index 0
                 res.add(0,temp.val);


                }
                if(temp.left!=null)
                    q.add(temp.left);
                if(temp.right!=null)
                    q.add(temp.right);
                
            }
            
            flag=!flag;
            ans.add(res);
            
            
            
        }
        return ans;
    }
}
