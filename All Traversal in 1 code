
class Pair
{
    Node node;
    int num;
    Pair(Node node,int num)
    {
        this.node=node;
        this.num=num;
    }
}
class Tree {
    
    ArrayList<Integer> postOrder(Node node) {
        // code here
                ArrayList<Integer> preorder=new ArrayList<Integer>();

        if(node==null)
        return preorder;
        
        ArrayList<Integer> inorder=new ArrayList<Integer>();
        ArrayList<Integer> postorder=new ArrayList<Integer>();
        Stack<Pair> stack=new Stack<>();
        
        
        stack.push(new Pair(node,1));
        while(stack.size()>0)
        {
            Pair it=stack.pop();
            if(it.num==1)
            {
                preorder.add(it.node.data);
                it.num++;
                stack.push(it);
                if(it.node.left!=null)
                {
                    stack.push(new Pair(it.node.left,1));
                }

            }
            else if(it.num==2)
            {
                inorder.add(it.node.data);
                it.num++;
                stack.push(it);
                if(it.node.right!=null)
                {
                    stack.push(new Pair(it.node.right,1));
                }
            }
            else
            {
                postorder.add(it.node.data);
            }
        }
        return postorder;
        
    }
}
