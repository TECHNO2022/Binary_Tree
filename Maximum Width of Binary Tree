//Given the root of a binary tree, return the maximum width of the given tree.

//The maximum width of a tree is the maximum width among all levels.


class Pair{
    TreeNode root;
    int num;
    Pair(TreeNode root,int num)
    {
        this.root=root;
        this.num=num;
    }
}
class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        if(root==null)
            return 0;
        
        Queue<Pair> q=new LinkedList<>();
        q.add(new Pair(root,0));
        int max=0;
        
        while(!q.isEmpty())
        {
            int size=q.size();
            int min=q.peek().num;
            int first=0;
            int last=0;
            
            for(int i=0;i<size;i++)
            {
              int id=q.peek().num-min;
              TreeNode temp=q.poll().root;
              if(i==0)
              {
                 first=id; 
              }
                if(i==size-1)
                {
                    last=id;
                }
                if(temp.left!=null)
                {
                    q.add(new Pair(temp.left,2*id+1));
                }
                if(temp.right!=null)
                {
                    q.add(new Pair(temp.right,2*id+2));
                }
            }
                max=Math.max(last-first+1,max);

                
                
            
        }
        return max;
        
    }
}

